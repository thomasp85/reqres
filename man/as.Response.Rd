% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/response.R
\name{as.Response}
\alias{as.Response}
\alias{as.Response.Response}
\alias{as.Response.Request}
\alias{as.Response.condition}
\alias{as.Response.connection}
\title{Create a Response from another object}
\usage{
as.Response(x, ...)

\method{as.Response}{Response}(x, ...)

\method{as.Response}{Request}(x, ...)

\method{as.Response}{condition}(x, req, status = NULL, ...)

\method{as.Response}{connection}(x, req, status = 200L, type = "text/plain",
  collapse = "\\n", ...)
}
\arguments{
\item{x}{A condition, connection, Request,
or Response}

\item{...}{Additional arguments for the Response constructor (e.g., \code{status})}

\item{req}{A \link{Request} object}

\item{collapse}{A character string specifying how to collapse the lines read
from connection \code{x}.}
}
\value{
A new Response object
}
\description{
Create a \link{Response} from another object,
such as a connection, condition, or Request.
}
\details{
Applications can define S3 methods for \code{as.Reponse}
to map their objects into HTTP responses.
This package provides the base method
and a few useful methods.

\code{as.Reponse} can create a Response object
from several types of \code{x}.

\itemize{
\item condition - Creates an error response
\item connection - Reads the response body from connection
\item Request - Same as \code{Response$new(x, ...)}
\item Response - Returns \code{x}
}

If \code{x} is a \link{condition} object,
the response body is taken from the condition's message.
The default status depends upon the kind of condition.

\itemize{
\item 400 (Bad Request) for \code{message} conditions
\item 500 (Internal Server Error) for \code{error} conditions.
}

This lets the application signal user errors by calling
the \link{message} function
or signal server errors by calling the \link{stop} function.
It can trap the condition (e.g., using \link{tryCatch});
and coerce it into a Response.

If \code{x} is a \link{connection},
the body of the message is read from the connection.
The status defaults to 200 (OK),
and the content type defaults to \code{text/plain}.
}
